static int x=[](){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	return 0;
}();	
class Solution {
public:
    vector<int> findAnagrams(string s, string p) {    
        vector<int> res;
        if(p.length()>s.length())
            return res;
        int dic[128] = {0};
        int cur[128] = {0};
        int length=p.length();
        int align=0;
        for(int t=0;t<length;t++)
            dic[p[t]]++;
        for(int t=0;t<length;t++)
        {
            if(dic[s[t]]==0)
                align++;
            else
            {
                cur[s[t]]++;
                if(cur[s[t]]>dic[s[t]])
                    align++;
            }
        }
        int head=0,tail=length-1;
        bool sig=0;
        if(align==0)
        {
            res.push_back(0);
            sig=1;
        }
        while(tail!=s.length()-1)
        {
            if(s[++tail]==s[head])
            {
                head++;
                if(sig)
                    res.push_back(head);
                continue;
            }
            char stail=s[tail];
            if(dic[stail]==0)
            {
                align++;
            }
            else
            {
                cur[stail]++;
                if(cur[stail]>dic[stail])
                    align++;
            }
            char shead=s[head];
            if(dic[shead]==0)
            {
                align--;
            }
            else
            {
                if(cur[shead] > dic[shead])
                    align--;
                cur[shead]--;
            }
            head++;
            if(align==0)
            {
                res.push_back(head);
                sig=1;
            }
            else
                sig=0;
                
        }
        return res;
    }
};
